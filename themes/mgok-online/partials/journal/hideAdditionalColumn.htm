==
<?php
function onStart() {
	$students_count = count($this->page->components['ELjournal']->students);
	$this['addictives_count'] = count($this->page->components['ELjournal']->addictives);
	$this['student_count'] = $students_count;
	//$this['columns'] = $addictives_count/$students_count;
	$this['role'] = $this->page->components['ELjournal']->role;
	$this['taskTypes'] = ['Кр', 'Пр', 'Пара', 'Экз', 'Зач', 'Срез'];
	
	$this['functions'] = new class {
		public function setDateAttribute( $date ) {
		  $x = explode('-', $date);
			$day = $x[2];
			return $day;
		}
	};
}
?>
==
{% if addictives_count > 0 %}
	{% for column in 0..addictives_count - 1 %}
	
		<div class="date-col-additional date-col-additional-hide add-fields-col scrollable">
			<div class="addictional-head">
				<div class="addTaskInput__div" data-unique-id={{addictives[column].unique_id}}>
					
					{% if Authorization.role == 'Преподаватель'  or Authorization.role == 'Модератор' %}
						<select class="selectTask">
							{% for taskType in taskTypes %}
								<option
									{% if addictives[column].name_lesson == taskType %}
										selected
									{% endif %}
								>
									{{taskType}}
								</option>
							{% endfor %}
						</select>
						<input 
							class="addTaskDate" 
							placeholder="Число:" 
							type="text" 
							value={{functions.setDateAttribute(addictives[column].date_lesson)}}
						>
					{% else %}
						<span class="selectTask">{{addictives[column].name_lesson}}</span>
						<span class="addTaskDate">{{functions.setDateAttribute(addictives[column].date_lesson)}}</span>
					{% endif %}
					
				</div>
				<div class="plus-img__div">
					{% if Authorization.role == 'Преподаватель'  or Authorization.role == 'Модератор' %}
	          <svg class="addTaskDelete" width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
	            <path d="M15 6L6 15" stroke="#CACACA" stroke-width="2" stroke-linecap="round"/>
	            <path d="M15 15L6 6" stroke="#CACACA" stroke-width="2" stroke-linecap="round"/>
	          </svg>
	         {% endif %} 
	       </div>
			</div>
			
			{% for addictiveIndex in 1..student_count %}
				{% if role == "Студент" %}
					<span class="date-row">
						
					</span>
				{% else %}
					<div class="add-field__plus">
						<span class="date-row addTaskMark" contenteditable="true">
						
						</span>
					</div>
				{% endif %}
			{% endfor %}
		</div>
	{% endfor %}
{% endif %}
<script>
	const additionalHideColumns = Array.from(document.querySelectorAll('.date-col-additional-hide'));
	let defaultColumns = Array.from(document.querySelectorAll('.dates .date-col, .add-fields-col'));
	const defaultColumnsDates = defaultColumns.filter(column => column.querySelector('.date-head')).map(column => parseInt(column?.textContent) );

	additionalHideColumns?.forEach(column => {
		const date = parseInt(column.querySelector('.addTaskDate').value);
		for(const [index, defaultColumnDate] of defaultColumnsDates.entries()) {
			const isSetColumn = date < defaultColumnsDates[index] || index === defaultColumnsDates.length - 1;

			if (isSetColumn && index === 0) {
				defaultColumns[index].insertAdjacentElement('beforebegin', column);
				defaultColumnsDates.splice(0, 0, date);
				break;
			}
			else if (isSetColumn) {
				if (date >= defaultColumnsDates[index]) {
					defaultColumns[index].insertAdjacentElement('afterend', column);
				} else {
					defaultColumns[index].insertAdjacentElement('beforebegin', column);
				}
				defaultColumnsDates.splice(index, 0, date);
				break;
			}
		}

		defaultColumns = Array.from(document.querySelectorAll('.dates .date-col, .add-fields-col'));
	})
</script>